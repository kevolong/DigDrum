{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["HEATER_KIT","keyTrigger","keyCode","clipName","displayName","url","PIANO_KIT","DrumMachineApp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentDrum","currentKit","kitData","toConsumableArray","volume","loading","powerOn","showStart","handleDrumClick","bind","assertThisInitialized","handleKeyPress","playDrum","handleKitSwitch","handleVolume","highlightDrum","startDrums","document","addEventListener","removeEventLister","_this2","setState","setTimeout","event","button","forEach","drum","getElementById","undefined","click","clickSound","target","dataset","value","clickButton","id","sound","getAttribute","currentTime","play","drumPad","style","backgroundColor","className","react_default","a","createElement","Start","LOADING_SPINNER","INSTRUCTIONS","Display","DrumButtons","Controls","Component","map","key","data-value","onClick","name","src","type","htmlFor","onChange","Boolean","window","location","hostname","match","ReactDOM","render","App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNACMA,EAAa,CACjB,CACEC,WAAY,IACZC,QAAS,GACTC,SAAU,WACVC,YAAa,WACbC,IAAK,wBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,WACVC,YAAa,WACbC,IAAK,wBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,WACVC,YAAa,WACbC,IAAK,wBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,WACVC,YAAa,WACbC,IAAK,0BAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,WACVC,YAAa,OACbC,IAAK,wBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,SACVC,YAAa,UACbC,IAAK,sBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,aACVC,YAAa,cACbC,IAAK,0BAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,aACVC,YAAa,OACbC,IAAK,0BAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,SACVC,YAAa,YACbC,IAAK,uBAKHC,EAAY,CAChB,CACEL,WAAY,IACZC,QAAS,GACTC,SAAU,UACVC,YAAa,UACbC,IAAK,uBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,UACVC,YAAa,UACbC,IAAK,uBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,UACVC,YAAa,UACbC,IAAK,uBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,kBACVC,YAAa,SACbC,IAAK,+BAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,UACVC,YAAa,UACbC,IAAK,uBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,SACVC,YAAa,YACbC,IAAK,sBAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,gBACVC,YAAa,cACbC,IAAK,6BAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,eACVC,YAAa,aACbC,IAAK,4BAEP,CACEJ,WAAY,IACZC,QAAS,GACTC,SAAU,UACVC,YAAa,QACbC,IAAK,wBC9HHE,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,YAAa,GACbC,WAAY,aACZC,QAAQT,OAAAU,EAAA,EAAAV,CAAKV,GACbqB,OAAQ,GACRC,SAAS,EACTC,SAAS,EACTC,WAAW,GAEbf,EAAKgB,gBAAkBhB,EAAKgB,gBAAgBC,KAArBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACvBA,EAAKmB,eAAiBnB,EAAKmB,eAAeF,KAApBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACtBA,EAAKoB,SAAWpB,EAAKoB,SAASH,KAAdhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAChBA,EAAKqB,gBAAkBrB,EAAKqB,gBAAgBJ,KAArBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACvBA,EAAKsB,aAAetB,EAAKsB,aAAaL,KAAlBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACpBA,EAAKuB,cAAgBvB,EAAKuB,cAAcN,KAAnBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACrBA,EAAKwB,WAAaxB,EAAKwB,WAAWP,KAAhBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAjBDA,mFAsBjByB,SAASC,iBAAiB,UAAWvB,KAAKgB,+DAI1CM,SAASE,kBAAkB,UAAWxB,KAAKgB,qDAIhC,IAAAS,EAAAzB,KACXA,KAAK0B,SAAS,CAAEd,WAAW,EAAOF,SAAS,IAC3CiB,WAAW,WACTF,EAAKC,SAAS,CAAEf,SAAS,EAAMD,SAAS,KACvC,4CAIUkB,GACb,IAAIC,EACA7B,KAAKI,MAAMO,UAEbX,KAAKI,MAAMG,QAAQuB,QAAQ,SAASC,GAC9BH,EAAMtC,UAAYyC,EAAKzC,UACzBuC,EAASP,SAASU,eAAeD,EAAKxC,kBAI3B0C,IAAXJ,GACFA,EAAOK,iDAMGN,GACd,GAAI5B,KAAKI,MAAMO,QAAS,CAEtB,IAAMwB,EAAab,SAASU,eAAeJ,EAAMQ,OAAOC,QAAQC,OAE1DC,EAAcjB,SAASU,eAAeJ,EAAMQ,OAAOI,IACzDxC,KAAKiB,SAASkB,GACdnC,KAAKoB,cAAcmB,qCAKdE,GAEPzC,KAAK0B,SAAS,CACZrB,YAAaoC,EAAMC,aAAa,UAGlCD,EAAME,YAAc,EACpBF,EAAMhC,OAAST,KAAKI,MAAMK,OAAS,IACnCgC,EAAMG,6CAIMC,GACZA,EAAQC,MAAMC,gBAAkB,UAChCpB,WAAW,WACTkB,EAAQC,MAAMC,gBAAkB,WAC/B,6CAIWnB,GACa,qBAAvBA,EAAMQ,OAAOE,OACftC,KAAK0B,SAAS,CACZpB,WAAY,mBACZC,QAAQT,OAAAU,EAAA,EAAAV,CAAKJ,GACbW,YAAa,KAGfiB,SAASU,eAAe,gBAAgBgB,UAAY,SACpD1B,SAASU,eAAe,iBAAiBgB,UAAY,KAErDhD,KAAK0B,SAAS,CACZpB,WAAY,aACZC,QAAQT,OAAAU,EAAA,EAAAV,CAAKV,GACbiB,YAAa,KAGfiB,SAASU,eAAe,iBAAiBgB,UAAY,SACrD1B,SAASU,eAAe,gBAAgBgB,UAAY,yCAK3CpB,GACX5B,KAAK0B,SAAS,CACZjB,OAAQmB,EAAMQ,OAAOE,yCAKvB,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKX,GAAG,kBACLxC,KAAKI,MAAMQ,WAAaqC,EAAAC,EAAAC,cAACC,EAAD,CAAO/B,WAAYrB,KAAKqB,aAChDrB,KAAKI,MAAMM,SAAW2C,EACtBrD,KAAKI,MAAMO,SAAW2C,GAEzBL,EAAAC,EAAAC,cAAA,OAAKX,GAAG,eAAeQ,UAAU,yBAC/BC,EAAAC,EAAAC,cAACI,EAAD,CAASlD,YAAaL,KAAKI,MAAMC,cACjC4C,EAAAC,EAAAC,cAACK,EAAD,CAAa3C,gBAAiBb,KAAKa,gBAAiBN,QAASP,KAAKI,MAAMG,UACxE0C,EAAAC,EAAAC,cAACM,EAAD,CACEvC,gBAAiBlB,KAAKkB,gBACtBC,aAAcnB,KAAKmB,aACnBb,WAAYN,KAAKI,MAAME,WACvBG,OAAQT,KAAKI,MAAMK,kBApIFiD,aA6I7B,SAASF,EAAY5D,GAEnB,IAAMiD,EAAUjD,EAAMW,QAAQoD,IAAI,SAAA5B,GAAI,OACpCkB,EAAAC,EAAAC,cAAA,OACEX,GAAIT,EAAKxC,SACTqE,IAAK7B,EAAK1C,WACVwE,aAAY9B,EAAK1C,WACjB2D,UAAU,eACVc,QAASlE,EAAMiB,iBACdkB,EAAK1C,WACN4D,EAAAC,EAAAC,cAAA,SAAOX,GAAIT,EAAK1C,WAAY0E,KAAMhC,EAAKvC,YAAawD,UAAU,OAAOgB,IAAKjC,EAAKtC,IAAKwE,KAAK,iBAI7F,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKH,UAAU,yCACZH,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IAEXI,EAAAC,EAAAC,cAAA,OAAKH,UAAU,yCACZH,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IAEXI,EAAAC,EAAAC,cAAA,OAAKH,UAAU,yCACZH,EAAQ,GACRA,EAAQ,GACRA,EAAQ,KAOjB,SAASU,EAAQ3D,GACf,OACEqD,EAAAC,EAAAC,cAAA,OAAKH,UAAU,8BACbC,EAAAC,EAAAC,cAAA,OAAKX,GAAG,WAEiB,KAAtB5C,EAAMS,YAAqB,WAAiBT,EAAMS,cAO3D,SAASoD,EAAS7D,GAChB,OACEqD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKX,GAAG,gBACNS,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQX,GAAG,gBAAgBQ,UAAU,SAASV,MAAM,aAAawB,QAASlE,EAAMsB,iBAAhF,UAGA+B,EAAAC,EAAAC,cAAA,UAAQX,GAAG,eAAeQ,UAAU,GAAGV,MAAM,mBAAmBwB,QAASlE,EAAMsB,iBAA/E,kBAMJ+B,EAAAC,EAAAC,cAAA,OAAKX,GAAG,mBACNS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOe,QAAQ,UAAf,WAEFjB,EAAAC,EAAAC,cAAA,SAAOc,KAAK,QAAQzB,GAAG,iBAAiBuB,KAAK,SAASzB,MAAO1C,EAAMa,OAAQ0D,SAAUvE,EAAMuB,iBAMnG,SAASiC,EAAMxD,GACb,OACEqD,EAAAC,EAAAC,cAAA,WACG,IACDF,EAAAC,EAAAC,cAAA,UAAQX,GAAG,eAAesB,QAASlE,EAAMyB,YAAzC,UAON,IAAMiC,EAAeL,EAAAC,EAAAC,cAAA,OAAKX,GAAG,gBAAR,oCAGfa,EACJJ,EAAAC,EAAAC,cAAA,OAAKX,GAAG,cAAcQ,UAAU,aAC9BC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,wBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,yBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,yBACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,0BAIJrD,IC7OKyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAAoBrD,SAASU,eAAe,qBD4HtD,kBAAmB4C,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.62f2f729.chunk.js","sourcesContent":["// Heater kit data\nconst HEATER_KIT = [\n  {\n    keyTrigger: \"Q\",\n    keyCode: 81,\n    clipName: \"heater-1\",\n    displayName: \"Heater 1\",\n    url: \"/assets/Heater-1.mp3\"\n  },\n  {\n    keyTrigger: \"W\",\n    keyCode: 87,\n    clipName: \"heater-2\",\n    displayName: \"Heater 2\",\n    url: \"/assets/Heater-2.mp3\"\n  },\n  {\n    keyTrigger: \"E\",\n    keyCode: 69,\n    clipName: \"heater-3\",\n    displayName: \"Heater 3\",\n    url: \"/assets/Heater-3.mp3\"\n  },\n  {\n    keyTrigger: \"A\",\n    keyCode: 65,\n    clipName: \"heater-4\",\n    displayName: \"Heater 4\",\n    url: \"/assets/Heater-4_1.mp3\"\n  },\n  {\n    keyTrigger: \"S\",\n    keyCode: 83,\n    clipName: \"heater-6\",\n    displayName: \"Clap\",\n    url: \"/assets/Heater-6.mp3\"\n  },\n  {\n    keyTrigger: \"D\",\n    keyCode: 68,\n    clipName: \"dsc-oh\",\n    displayName: \"Open HH\",\n    url: \"/assets/Dsc_Oh.mp3\"\n  },\n  {\n    keyTrigger: \"Z\",\n    keyCode: 90,\n    clipName: \"kick-n-hat\",\n    displayName: \"Kick n' Hat\",\n    url: \"/assets/Kick_n_Hat.mp3\"\n  },\n  {\n    keyTrigger: \"X\",\n    keyCode: 88,\n    clipName: \"rp4-kick-1\",\n    displayName: \"Kick\",\n    url: \"/assets/RP4_KICK_1.mp3\"\n  },\n  {\n    keyTrigger: \"C\",\n    keyCode: 67,\n    clipName: \"cev-h2\",\n    displayName: \"Closed HH\",\n    url: \"/assets/Cev_H2.mp3\"\n  }\n];\n\n// Piano kit data\nconst PIANO_KIT = [\n  {\n    keyTrigger: \"Q\",\n    keyCode: 81,\n    clipName: \"chord-1\",\n    displayName: \"Chord 1\",\n    url: \"/assets/Chord_1.mp3\"\n  },\n  {\n    keyTrigger: \"W\",\n    keyCode: 87,\n    clipName: \"chord-2\",\n    displayName: \"Chord 2\",\n    url: \"/assets/Chord_2.mp3\"\n  },\n  {\n    keyTrigger: \"E\",\n    keyCode: 69,\n    clipName: \"chord-3\",\n    displayName: \"Chord 3\",\n    url: \"/assets/Chord_3.mp3\"\n  },\n  {\n    keyTrigger: \"A\",\n    keyCode: 65,\n    clipName: \"give-us-a-light\",\n    displayName: \"Shaker\",\n    url: \"/assets/Give_us_a_light.mp3\"\n  },\n  {\n    keyTrigger: \"S\",\n    keyCode: 83,\n    clipName: \"dry-ohh\",\n    displayName: \"Open HH\",\n    url: \"/assets/Dry_Ohh.mp3\"\n  },\n  {\n    keyTrigger: \"D\",\n    keyCode: 68,\n    clipName: \"bld-h1\",\n    displayName: \"Closed HH\",\n    url: \"/assets/Bld_H1.mp3\"\n  },\n  {\n    keyTrigger: \"Z\",\n    keyCode: 90,\n    clipName: \"punchy-kick-1\",\n    displayName: \"Punchy Kick\",\n    url: \"/assets/punchy_kick_1.mp3\"\n  },\n  {\n    keyTrigger: \"X\",\n    keyCode: 88,\n    clipName: \"side-stick-1\",\n    displayName: \"Side Stick\",\n    url: \"/assets/side_stick_1.mp3\"\n  },\n  {\n    keyTrigger: \"C\",\n    keyCode: 67,\n    clipName: \"brk-snr\",\n    displayName: \"Snare\",\n    url: \"/assets/Brk_Snr.mp3\"\n  }\n];\n\n// OLD file path: /assets/\nexport { HEATER_KIT, PIANO_KIT };\n","import React, { Component } from \"react\";\nimport { HEATER_KIT, PIANO_KIT } from \"./data.js\";\n\n// Parent component for entire drum app\nclass DrumMachineApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentDrum: \"\",\n      currentKit: \"Heater Kit\",\n      kitData: [...HEATER_KIT],\n      volume: 75,\n      loading: false,\n      powerOn: false,\n      showStart: true\n    };\n    this.handleDrumClick = this.handleDrumClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.playDrum = this.playDrum.bind(this);\n    this.handleKitSwitch = this.handleKitSwitch.bind(this);\n    this.handleVolume = this.handleVolume.bind(this);\n    this.highlightDrum = this.highlightDrum.bind(this);\n    this.startDrums = this.startDrums.bind(this);\n  }\n\n  componentDidMount() {\n    // Let user trigger drum buttons by pressing a key;\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventLister(\"keydown\", this.handleKeyPress);\n  }\n\n  //Force user to \"start\" app so audio will play\n  startDrums() {\n    this.setState({ showStart: false, loading: true });\n    setTimeout(() => {\n      this.setState({ powerOn: true, loading: false });\n    }, 1000);\n  }\n\n  // Handle key press on document\n  handleKeyPress(event) {\n    let button;\n    if (this.state.powerOn) {\n      //Iterate through bank array to find match\n      this.state.kitData.forEach(function(drum) {\n        if (event.keyCode === drum.keyCode) {\n          button = document.getElementById(drum.clipName);\n        }\n      });\n      //Click corresponding drum button\n      if (button !== undefined) {\n        button.click();\n      }\n    }\n  }\n\n  // Handle click of drum buttons\n  handleDrumClick(event) {\n    if (this.state.powerOn) {\n      //Get audio element\n      const clickSound = document.getElementById(event.target.dataset.value);\n      // Get div drumpad element\n      const clickButton = document.getElementById(event.target.id);\n      this.playDrum(clickSound);\n      this.highlightDrum(clickButton);\n    }\n  }\n\n  //Play drum sound from click or key press and update display\n  playDrum(sound) {\n    //Update display\n    this.setState({\n      currentDrum: sound.getAttribute(\"name\")\n    });\n    // Play Sound and make sure clip starts at 0\n    sound.currentTime = 0;\n    sound.volume = this.state.volume / 100;\n    sound.play();\n  }\n\n  // Change color of drumPad on click and then change back\n  highlightDrum(drumPad) {\n    drumPad.style.backgroundColor = \"#0542bc\";\n    setTimeout(function() {\n      drumPad.style.backgroundColor = \"#92959b\";\n    }, 150);\n  }\n\n  //Handle button blick to switch kits\n  handleKitSwitch(event) {\n    if (event.target.value === \"Smooth Piano Kit\") {\n      this.setState({\n        currentKit: \"Smooth Piano Kit\",\n        kitData: [...PIANO_KIT],\n        currentDrum: \"\"\n      });\n      // Change active state of buttons\n      document.getElementById(\"piano-switch\").className = \"active\";\n      document.getElementById(\"heater-switch\").className = \"\";\n    } else {\n      this.setState({\n        currentKit: \"Heater Kit\",\n        kitData: [...HEATER_KIT],\n        currentDrum: \"\"\n      });\n      //Change active state of buttons\n      document.getElementById(\"heater-switch\").className = \"active\";\n      document.getElementById(\"piano-switch\").className = \"\";\n    }\n  }\n\n  // Handle volume change\n  handleVolume(event) {\n    this.setState({\n      volume: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"loading-status\">\n          {this.state.showStart && <Start startDrums={this.startDrums} />}\n          {this.state.loading && LOADING_SPINNER}\n          {this.state.powerOn && INSTRUCTIONS}\n        </div>\n        <div id=\"drum-machine\" className=\"container text-center\">\n          <Display currentDrum={this.state.currentDrum} />\n          <DrumButtons handleDrumClick={this.handleDrumClick} kitData={this.state.kitData} />\n          <Controls\n            handleKitSwitch={this.handleKitSwitch}\n            handleVolume={this.handleVolume}\n            currentKit={this.state.currentKit}\n            volume={this.state.volume}\n          />\n        </div>\n      </div>\n    );\n  }\n} // end of DrumMachineApp parent component\n\n// Drum buttons - child of parent App\nfunction DrumButtons(props) {\n  // Map through drum bank array to render HTML\n  const drumPad = props.kitData.map(drum => (\n    <div\n      id={drum.clipName}\n      key={drum.keyTrigger}\n      data-value={drum.keyTrigger}\n      className=\"drum-pad col\"\n      onClick={props.handleDrumClick}>\n      {drum.keyTrigger}\n      <audio id={drum.keyTrigger} name={drum.displayName} className=\"clip\" src={drum.url} type=\"audio/mp3\" />\n    </div>\n  ));\n\n  return (\n    <div>\n      <div className=\"row no-gutters justify-content-center\">\n        {drumPad[0]}\n        {drumPad[1]}\n        {drumPad[2]}\n      </div>\n      <div className=\"row no-gutters justify-content-center\">\n        {drumPad[3]}\n        {drumPad[4]}\n        {drumPad[5]}\n      </div>\n      <div className=\"row no-gutters justify-content-center\">\n        {drumPad[6]}\n        {drumPad[7]}\n        {drumPad[8]}\n      </div>\n    </div>\n  );\n}\n\n// Display name of current drum - child of parent App\nfunction Display(props) {\n  return (\n    <div className=\"row justify-content-center\">\n      <div id=\"display\">\n        {/* If there is no drum present then add spaces so it will render */}\n        {props.currentDrum === \"\" ? \"\\u00a0\\u00a0\" : props.currentDrum}\n      </div>\n    </div>\n  );\n}\n\n// Volume and Bank controls - child of parent App\nfunction Controls(props) {\n  return (\n    <div>\n      <div id=\"kit-switches\">\n        <p>Kit</p>\n        <div>\n          <button id=\"heater-switch\" className=\"active\" value=\"Heater Kit\" onClick={props.handleKitSwitch}>\n            Heater\n          </button>\n          <button id=\"piano-switch\" className=\"\" value=\"Smooth Piano Kit\" onClick={props.handleKitSwitch}>\n            Smooth Piano\n          </button>\n        </div>\n      </div>\n\n      <div id=\"volume-controls\">\n        <div>\n          <label htmlFor=\"volume\">Volume</label>\n        </div>\n        <input type=\"range\" id=\"volume-control\" name=\"volume\" value={props.volume} onChange={props.handleVolume} />\n      </div>\n    </div>\n  );\n} // end Controls()\n\nfunction Start(props) {\n  return (\n    <div>\n      {\" \"}\n      <button id=\"start-button\" onClick={props.startDrums}>\n        Start\n      </button>\n    </div>\n  );\n}\n\nconst INSTRUCTIONS = <div id=\"instructions\">Tap drums with mouse or keyboard</div>;\n\n// Loading Spinner JSX HTML\nconst LOADING_SPINNER = (\n  <div id=\"loading-bar\" className=\"sk-circle\">\n    <div className=\"sk-circle1 sk-child\" />\n    <div className=\"sk-circle2 sk-child\" />\n    <div className=\"sk-circle3 sk-child\" />\n    <div className=\"sk-circle4 sk-child\" />\n    <div className=\"sk-circle5 sk-child\" />\n    <div className=\"sk-circle6 sk-child\" />\n    <div className=\"sk-circle7 sk-child\" />\n    <div className=\"sk-circle8 sk-child\" />\n    <div className=\"sk-circle9 sk-child\" />\n    <div className=\"sk-circle10 sk-child\" />\n    <div className=\"sk-circle11 sk-child\" />\n    <div className=\"sk-circle12 sk-child\" />\n  </div>\n);\n\nexport default DrumMachineApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DrumMachineApp from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<DrumMachineApp />, document.getElementById(\"drum-machine-app\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}